/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package apache.poi.poc;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.stream.Stream;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.WorkbookFactory;

public class App {
  public static final String[] EXCEL_EXT =
      new String[] {
        ".xlsx", ".xlsm", ".xlsb", ".xltx", ".xltm", ".xls", ".xlt", ".xls", ".xlam", ".xla",
        ".xlw", ".xlr"
      };

  public static void main(String[] args) throws IOException {
    processFiles(args[0]);
  }

  private static void processFiles(String files) throws IOException {
    try (Stream<String> stream = Files.lines(Paths.get(files))) {
      stream
          .filter(it -> it != null && !it.trim().isEmpty() && isExcel(it))
          .forEach(App::processFile);
    }
  }

  private static void processFile(String filePath) {
    try (Workbook workbook = WorkbookFactory.create(new File(filePath))) {
      int numSheets = workbook.getNumberOfSheets();
      int maxRows = 0;
      for (Sheet sheet : workbook) {
        maxRows = Math.max(maxRows, getRows(sheet));
      }
      System.out.printf("%s,%d,%d%n", filePath, numSheets, maxRows);
    } catch (Exception e) {
      System.out.printf("%s,failed%n", filePath);
    }
  }

  private static boolean isExcel(String filePath) {
    for (String ext : EXCEL_EXT) {
      if (filePath.endsWith(ext)) return true;
    }
    return false;
  }

  private static int getRows(Sheet sheet) {
    int rowTotal = sheet.getLastRowNum();

    if ((rowTotal > 0) || (sheet.getPhysicalNumberOfRows() > 0)) {
      ++rowTotal;
    }
    return rowTotal;
  }
}
